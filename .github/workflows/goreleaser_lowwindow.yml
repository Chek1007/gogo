name: releaser_low_window

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  goreleaser_low_window:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive

      - name: Set up Go 1.21
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Run go generate
        run: go generate
        working-directory: v2

      - name: Set up Go 1.11
        uses: actions/setup-go@v3
        with:
          go-version: '1.11'

      - name: Get latest git tag
        id: get_tag
        run: echo "TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV

      - name: Compile for Windows x64
        run: go build -o gogo_windowsxp_amd64.exe -ldflags "-s -w -X 'github.com/chainreactors/gogo/v2/internal/core.ver=${{ github.ref_name }}'" -tags=forceposix -asmflags "all=-trimpath=${{ env.GOPATH }}" -gcflags "all=-trimpath=${{ env.GOPATH }}" .
        env:
          GOOS: windows
          GOARCH: amd64
        working-directory: v2

      - name: Compile for Windows x64
        run: go build -o gogo_windowsxp_386.exe -ldflags "-s -w -X 'github.com/chainreactors/gogo/v2/internal/core.ver=${{ github.ref_name }}'"  -tags=forceposix -asmflags "all=-trimpath=${{ env.GOPATH }}" -gcflags "all=-trimpath=${{ env.GOPATH }}" .
        env:
          GOOS: windows
          GOARCH: '386'
        working-directory: v2

      - name: Upload Windows Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.get_release.outputs.release_id }}/assets?name=gogo.exe
          asset_path: ./v2/gogo_windowsxp_amd64.exe
          asset_name: gogo_windowsxp_amd64.exe
          asset_content_type: application/octet-stream
